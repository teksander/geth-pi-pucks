#!/bin/bash  
# Starts an experiment
#
# Options:
# --ping     or -p  : will ping to identify and check reachable robots
# --reset    or -r  : will reset everything blockchain related
# --start    or -s  : will open tmux windows to start experiment
# --collect  or -c  : will collect logs at the end of the experiment

# Example: 
# . starter -p -r -s -c

source ../globalconfig

echo "+-----------------------------------------------------------+"
echo "MAINFOLDER IS $MAIN_DIR"


for opt in "$@"
do
if [[ $opt == "--ping" || $opt == "-p" ]]; then

echo "+-----------------------------------------------------------+"
echo "Pinging robots..."
./ping-all
wait

echo "+-----------------------------------------------------------+"
echo "Checking all robots..."
./check-all

## Check responding robot count
#NUM_RESP=$(wc -l < pi-pucks.txt)
#if ((NUM_ROB != NUM_RESP)); then
#	printf '%s\n' "Not enough robots are responding. STOP" >&2
#	exit 1
#fi

fi
done


for opt in "$@"
do
if [[ $opt == "--reset" || $opt == "-r" ]]; then

	./scp-all globalconfig

	echo "+-----------------------------------------------------------+"
	echo "Resetting Geth..."
	./reset-geth
	wait

	echo "+-----------------------------------------------------------+"
	echo "Resetting the Genesis Block..."
	./reset-genesis
	wait

	echo "+-----------------------------------------------------------+"
	echo "Synchronizing clocks..."
	TIME=$(date +"%F %T")
	./ssh-all "sudo timedatectl set-time '$TIME'"
	
fi
done

for opt in "$@"
do
if [[ $opt == "--start" || $opt == "-s" ]]; then

	echo "+-----------------------------------------------------------+"
	echo "Starting Experiment"

	./tmux-all "geth + main"
	
fi
done



# read -p "Press Enter when experiment is concluded"

# for opt in "$@"
# do
# if [[ $opt == "--collect" || $opt == "-c" ]]; then

# 	echo "+-----------------------------------------------------------+"
# 	echo "Collecting Logs"

# 	./collect-logs $LOG_FOLDER
	
# fi
# done
