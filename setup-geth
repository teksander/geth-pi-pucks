#!/bin/bash
#  Initalize GETH on either the computer or the pi-pucks

# Header
cd $(dirname $0)

source globalconfig

ID=$MONITOR_ID
ID_FILE="/boot/pi-puck_id"
MSG="-------------------------\n"

# If is a Pi-Puck
if [ -f "$ID_FILE" ]; then
    ID=$(cat "$ID_FILE")
fi

# If using router network
if grep -q "192.168" <<< "$SUBNET"; then
    ID=$(ip addr | grep -m 1 -oE  $SUBNET.[0-9]+ | cut -d '.' -f 4 | head -n 1)
fi

# If the GETH process has not been initialized in the blockchain directory
if [ ! -d "$MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/geth" ]; then
    geth init  "$MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/genesis/$GENESIS_NAME.json" \
    --datadir  "$MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER" 

    MSG+="GETH initialized @ $MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/geth\n"
    MSG+="Genesis: $MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/genesis/$GENESIS_NAME.json\n"
    MSG+="Keystore: $MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/keystores/${ID}\n"
fi

MSG+="GETH running @ ${SUBNET}.${ID}\n"
MSG+="-------------------------"

echo "" & sleep 5 &&  echo -e $MSG & disown

geth --datadir "$MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER" \
--keystore "$MAIN_DIR_ROBOTS/$BLOCKCHAIN_FOLDER/keystores/$ID" \
--syncmode "full" \
--port 30311 \
--ws \
--ws.addr "0.0.0.0" \
--ws.port 3335 \
--ws.api "personal,eth,net,web3,txpool,miner,admin" \
--networkid 1515 \
--allow-insecure-unlock \
--lightkdf \
--verbosity 4 \
--vmdebug \
--nodiscover \
--miner.gasprice "0x1" \
--miner.gastarget "0x1" \
--miner.gaslimit "0x9000000000" \
--nat=extip:"${SUBNET}.${ID}" 